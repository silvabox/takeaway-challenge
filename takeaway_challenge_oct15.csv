Timestamp,Your name,Whose challenge are you reviewing?,README updated,README includes instructions on how to use application,Use named subject with `described_class`,Use `context` and `describe` blocks to create test scopes,Vacuous tests,Use `before` blocks to set up objects rather than repeat code,Incomplete unit tests (test coverage),Multiple `expect`s in `it` block,Handling randomness in tests,Getting rid of redundant `respond_to` expectations,Naming conventions and matching the domain model,Commented-out code,Refactoring conditionals,Do not expose internal implementation,Single Responsibility Principle (SRP),Use of magic numbers (e.g. on capacity),Use of strings instead of symbols,Command/Query naming and separation,Improper use of attr_*,Redundant lines of code,Did you find this form useful in completing the review?,Ensure that all gems being used are in Gemfile,Tests should test real behaviours not stubs,Stubbing the Twilio API,Unit vs Integration tests,Explicit tests for every element of the public interface,Use of modules,Law of Demeter,Appropriate use of Dependency Injection,Separation of Concerns,Design for Single Responsibility Principle,Personal details and tokens on GitHub,Explore the language for solutions to common problems,Open Closed Principle,Use consistent styles and indentation,Any additional comments on the code you reviewed?,What is the reviewee's GitHub username?
10/23/2015 15:45:55,Anindya Bhattacharyya,tansaku,The README has been updated,,,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,,The design has at least `Takeaway` and `Order` classes or equivalent,,,,,,benny-kollek
10/23/2015 15:51:34,Evgenii,Joe,The README has been updated,,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,ENV vars have been used in place of sensitive data,"The solution makes good use of the Ruby language, e.g.","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,,CHN-Challenger
10/23/2015 16:07:09,Jongmin Kim,Sara,,,,,,,,,,,,,,,,,,,,,"I find the review introduction page very useful and helpful. If juniors have access to this information after each challenge, they'd give a better code review when they're seniors.   ",Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,,All public interface elements are tested,,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,ENV vars have been used in place of sensitive data,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,,sarahkristinepedersen
10/26/2015 10:14:38,Andrew Dowell,Jay,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,,All tests test real behaviour and not stubs,,,All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,Business and presentation logic has been cleanly separated,,,,,,,jrose111284
10/26/2015 10:22:59,Chris Weeks,Ivan Sathianathan,,,Correctly uses named subject,,,,,,,,,,,,,,,,,,,,All tests test real behaviour and not stubs,,,,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection",,The code follows the Ruby style and coding conventions,,ivan-sathianathan
10/26/2015 10:24:53,Rob Youngman,Dan Wheeler,,,Correctly uses named subject,,,,,,,,,,,,,,,,,,"Form is very useful, particularly being emailed to you after the review.",Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),,The solution correctly prefers classes to modules,,,Business and presentation logic has been cleanly separated,,,,,The code follows the Ruby style and coding conventions,"Menu was hard coded rather than initialised or injected.
Useful to have known how to prevent security tokens being checked into Git before the challenge not after. ",d9nny
10/26/2015 10:32:05,jamie,pablo,The README has been updated,The README has instructions,,,,,,,,,,,,,,,,,,,,,,,,All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g.",,The code follows the Ruby style and coding conventions,,blancopado
10/26/2015 10:37:13,Aaron Kendall,Edward Withers,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,"Very useful, really helpful guide to the review.",Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,,,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,"ENV vars have been used in place of sensitive data, The README has clear instructions on handling env vars, e.g. points to a .env.example file etc.","The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection",,The code follows the Ruby style and coding conventions,,Dearshrewdwit
10/26/2015 10:39:44,Zhivko,Rajeev Hejib,,,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,,,All unit tests use doubles (London style),,The solution correctly prefers classes to modules,,The Twilio dependency can be injected appropriately,,,,"Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection",,The code follows the Ruby style and coding conventions,,rajeevhejib
10/26/2015 10:50:58,Moe,Chuka,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,"Yes, alongside the review document.",Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts",,The code follows the Ruby style and coding conventions,"Awesome code, found it difficult to pick out flaws. 

Reviewee and myself strongly believed that a module should have been used for the messaging service, but apparently this was frowned upon by consensus?",chukaebi
10/26/2015 10:56:57,Harriet Craven,Amy Yang,The README has been updated,The README has instructions,,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,,,The solution correctly prefers classes to modules,,The Twilio dependency can be injected appropriately,,The design has at least `Takeaway` and `Order` classes or equivalent,,,"The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,,mongolianprincess
10/26/2015 10:58:08,Michael Roger,Samuel Overloop,,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,"Yes, very useful guide.",Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),,,The Law of Demeter is respected in the code base,,Business and presentation logic has been cleanly separated,,"ENV vars have been used in place of sensitive data, The dotenv gem has been used to ensure others can get set up easily with the necessary environment variables","The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,No real issues. A good submission.,samover
10/26/2015 10:59:07,Nathaniel Green + Chris Weeks,George Maddocks,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,Yes.,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g.",,The code follows the Ruby style and coding conventions,"Change those food classes into a hash and clean up the takeaway methods. 

Testings good and covered.",gwpmad
10/26/2015 10:59:37,Tim Harrison,Deon Tan,The README has been updated,,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,ENV vars have been used in place of sensitive data,"The solution makes good use of the Ruby language, e.g.","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,Excellent effort and great Ruby code. Possibly a bit over engineered but demonstrates strong understanding.,djtango
10/26/2015 10:59:54,Ana,Andrew Werner,,,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,,,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,Business and presentation logic has been cleanly separated,,,"The solution makes good use of the Ruby language, e.g.","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,,ALRW
10/26/2015 11:00:13,Joe Zhou,Takeaway Challenge,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,,All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g., reduce/inject is used to aggregate (e.g. sum) over a collection","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,Nice demo app for terminal created!,ezzye
10/26/2015 11:00:39,Kyle,Eleni,The README has been updated,,,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,,All public interface elements are tested,,,,,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g.",,,,EleniSkouroupathi
10/26/2015 11:04:08,Norm,Rob Youngman,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,,The design has at least `Takeaway` and `Order` classes or equivalent,,,,The code follows the Ruby style and coding conventions,,youngmanr
10/26/2015 11:04:35,Jongmin Kim,Hamza,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,"The README has clear instructions on handling env vars, e.g. points to a .env.example file etc.","The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,I think it was well-written code. Some tips about ENV would be useful before the challenge.,hsheikhm
10/26/2015 11:04:36,pablo Domínguez,Tom Barnes,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,,,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,,The design has at least `Takeaway` and `Order` classes or equivalent,"ENV vars have been used in place of sensitive data, The dotenv gem has been used to ensure others can get set up easily with the necessary environment variables, The README has clear instructions on handling env vars, e.g. points to a .env.example file etc.","The solution makes good use of the Ruby language, e.g.","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,,forty9er
10/26/2015 11:05:07,Matt,Mattia,,,,,,,,,,,,,,,,,,,,,Very tricky to get code review done within time allocated!,Required gems (i.e. twilio-ruby) are listed in Gemfile,,,,,The solution correctly prefers classes to modules,,,,,,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection",,The code follows the Ruby style and coding conventions,,Mattia46
10/26/2015 11:19:18,jamie,andy dowell,The README has been updated,The README has instructions,,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,,The design has at least `Takeaway` and `Order` classes or equivalent,ENV vars have been used in place of sensitive data,"The solution makes good use of the Ruby language, e.g., reduce/inject is used to aggregate (e.g. sum) over a collection","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,,k0zakinio
10/26/2015 11:24:00,Yev Dyko,Norm Fasey,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,The Twilio API is stubbed appropriately,All unit tests use doubles (London style),All public interface elements are tested,,,The Twilio dependency can be injected appropriately,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,The instruction to README is great! ,deathray1977
10/26/2015 12:25:58,Usman,Julian ,The README has been updated,,,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,,,,,The solution correctly prefers classes to modules,,,Business and presentation logic has been cleanly separated,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g.",,,"Was a bit complicated and didn't need to be. I felt that Julian could have taken a simpler approach and achieved the same results. 

Twillio wasn't working at all so was not able to test this. There were some tests which could have been deleted but were still present. ",jbhdeconinck
10/26/2015 12:43:40,dan,yev,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,,,The solution correctly prefers classes to modules,,,,The design has at least `Takeaway` and `Order` classes or equivalent,,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection",,The code follows the Ruby style and coding conventions,,yevdyko  
10/26/2015 14:06:26,Emily Worrall,Dovile Sandaite,,,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,,,,,,,The design has at least `Takeaway` and `Order` classes or equivalent,,,,The code follows the Ruby style and coding conventions,,dovilesand
10/26/2015 14:39:50,David Bebb,Mahmud,The README has been updated,,,,,,,,,,,,,,,,,,,,Yes,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,,,,The design has at least `Takeaway` and `Order` classes or equivalent,"ENV vars have been used in place of sensitive data, The dotenv gem has been used to ensure others can get set up easily with the necessary environment variables",Hash.new(0) is used to simplify management of counts,,,"Consistency of style, look at hound comments",MahmudH
10/26/2015 21:47:30,Lucy Fang,Raphael Jauslin,The README has been updated,The README has instructions,Correctly uses named subject,,,,,,,,,,,,,,,,,,,Required gems (i.e. twilio-ruby) are listed in Gemfile,All tests test real behaviour and not stubs,,All unit tests use doubles (London style),All public interface elements are tested,The solution correctly prefers classes to modules,The Law of Demeter is respected in the code base,The Twilio dependency can be injected appropriately,,The design has at least `Takeaway` and `Order` classes or equivalent,ENV vars have been used in place of sensitive data,"The solution makes good use of the Ruby language, e.g., Hash.new(0) is used to simplify management of counts, reduce/inject is used to aggregate (e.g. sum) over a collection","The open closed principle has been respected, e.g. food items are not hard coded into restaurant",The code follows the Ruby style and coding conventions,"- Think it would be worthwhile to add more functions to update and delete orders should customers change their minds which has been done
- Feel that the takeaway class may be doing some things the menu class should do like check if it's available which is currently a private method in the menu class
",NULL-OPERATOR